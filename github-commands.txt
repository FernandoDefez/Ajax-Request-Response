----------------- GITHUB -------------------

*** Navigation Commands **

    pwd: show the directory
    cd: get access
    ls:shows all files
    dir: like "ls"

*** Basic Commands ***

1.- git init: to initialize - WORKING DIRECTORY -
2.- git status: to see our files who are not in the - STAGING AREA -
3.- git add -filename-: to add the file to the - STAGING AREA -
4.- git commit -m <message or comment>: to save the changes that are in the - STAGING AREA -
5.- git checkout -- filename: to rollback the changes
6.- git diff filename: to see the diference betwen the old file and the new file
7.- git log: to see the all commits
8.- 
____________________________________________

[CONFIG COMMANDS]
- git config --global user.email "FernandoDefez99@gmail.com"
- git config --global user.name "Fernando"

.gitignore: inside of it. It must be the files that you want to ignore.




---------- ESPAÑOL ------------
Metodología cuando empiezas git.

Git status -> Mirar si tienes modificaciones tuyas y si existe algún pull o push
Git fetch -> Por si acaso tus ramas no se han actualizado correctamente, esto NO actualiza los ficheros de las ramas, sólo el estado de esa rama
Git status -> Para verificar de nuevo modificaciones, pull y pushs
Git pull -> Ahora sí descargas las actualizaciones
Git add/commit/... -> Ahora guardas tus modificaciones
Git status -> Miras que siga sin necesitar un pull, por si las moscas
Git push -> Subes tus datos
Git status -> Compruebas que está todo correctamente
Y ya por manía puedes hacer un:

Git log -> Para comprobar que está correctamente comiteado lo que has pusheado
Para salir de Git log, pulsa "Q"  